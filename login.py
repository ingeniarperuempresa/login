import streamlit as st
import pandas as pd
import gen_ai  # Aseg칰rate de que este m칩dulo est칠 correctamente instalado y accesible

# Configuraci칩n de la p치gina
st.set_page_config(
    page_title="Registro de IngenIAr",
    page_icon="游늵",
    layout="wide",
)

# ID del Google Sheet
gsheet_id = '1z27zAFC-b16WC4s3EF9N9vN7Uf2dM-bkO_l4N7kUCJQ'
sheet_id = '0'  # Asumiendo que quieres la primera hoja

# URL para leer los datos en formato CSV
url = f'https://docs.google.com/spreadsheets/d/{gsheet_id}/export?format=csv&gid={sheet_id}'

# Leer los datos del Google Sheet
df = pd.read_csv(url)

# Limpiar las columnas
df['celular'] = df['celular'].astype(str).str.replace(',', '').str.strip()
df['contrase침a'] = df['contrase침a'].astype(str).str.strip()

# Funci칩n para verificar las credenciales y obtener el nombre y sue침o
def verify_login(celular, contrase침a):
    celular_limpio = celular.replace(',', '').strip()
    user_data = df[(df['celular'] == celular_limpio) & (df['contrase침a'] == contrase침a)]
    
    if not user_data.empty:
        return user_data.iloc[0]['nombre'], user_data.iloc[0]['sue침os'], user_data.iloc[0]['time'], user_data.iloc[0]['hechos']
    return None, None, None, None

# Barra lateral para el inicio de sesi칩n
with st.sidebar:
    st.image("logo2.png", width=70)  # Aseg칰rate de que la imagen est칠 en la ruta correcta
    st.header("Inicio de Sesi칩n")
    celular_input = st.text_input("N칰mero de Celular:")
    contrase침a_input = st.text_input("Contrase침a:", type="password")
    
    if st.button("Iniciar Sesi칩n"):
        nombre, sue침os, time, hechos = verify_login(celular_input, contrase침a_input)
        if nombre:
            st.session_state.logged_in = True
            st.session_state.nombre = nombre
            st.session_state.sue침os = sue침os
            st.session_state.time = time
            st.session_state.hechos = hechos
            st.success("춰Inicio de sesi칩n exitoso!")
        else:
            st.error("N칰mero de celular o contrase침a incorrectos.")

# Mostrar el mensaje personalizado solo si el usuario est치 logueado
if st.session_state.get("logged_in"):
    st.write(f"Hola {st.session_state.nombre}, tu sue침o es: {st.session_state.sue침os}.")
    
    # An치lisis de niveles y objetivos
    if st.button("Analizar Nivel y Objetivos"):
        # Configura la generaci칩n
        GOOGLE_API_KEY = st.secrets["GOOGLE_API_KEY"]
        gen_ai.configure(api_key=GOOGLE_API_KEY)

        # Preparar el prompt para la API de Gemini
        prompt = f"""
        Analiza los siguientes datos y determina en qu칠 nivel se encuentra la persona del 1 al 5:
        - Sue침o: {st.session_state.sue침os}
        - Tiempo: {st.session_state.time}
        - Hechos: {st.session_state.hechos}

        Luego, elabora una lista de objetivos que debe cumplir para pasar al siguiente nivel.
        """

        try:
            model = gen_ai.GenerativeModel(
                model_name="gemini-1.5-flash",
                generation_config={
                    "temperature": 1,
                    "top_p": 0.95,
                    "top_k": 64,
                    "max_output_tokens": 8192,
                },
                system_instruction="Eres un asistente que ayuda a analizar niveles y objetivos."
            )

            chat_session = model.start_chat(history=[])
            gemini_response = chat_session.send_message(prompt)

            st.markdown(f"## An치lisis del Nivel:\n{gemini_response.text}")
        except Exception as e:
            st.error(f"Ocurri칩 un error al analizar: {str(e)}")
else:
    st.warning("游녣 Despliega el panel lateral para iniciar sesi칩n.")
